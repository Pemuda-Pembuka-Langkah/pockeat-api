name: Code Quality & Testing

on:
  pull_request:
    branches: ["main", "master", "dev", "staging"]
  workflow_dispatch:  # Allow manual trigger

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        cache: 'pip'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-asyncio pytest-cov flake8 mypy black isort bandit

    - name: Run flake8 linting
      run: |
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --max-complexity=10 --max-line-length=100
    
    - name: Run mypy type checking
      run: |
        mypy api --ignore-missing-imports
    
    - name: Run bandit security scan
      id: bandit
      run: |
        set -o pipefail
        bandit -r api | tee bandit-results.txt

    - name: Set up environment for testing
      run: |
        # Create mock environment variables for testing
        echo "GOOGLE_API_KEY=dummy-api-key-for-testing" >> $GITHUB_ENV

    - name: Check directory structure
      run: |
        echo "Repository root contents:"
        ls -la
        echo "Testing for tests directory:"
        ls -la tests/ || echo "tests/ directory not found"
        echo "Checking potential test locations:"
        find . -name "test_*.py" -type f | sort

    - name: Run pytest with coverage
      run: |
        # First try the expected location
        pytest --cov=api --cov-report=xml --cov-report=term --cov-fail-under=90 || \
        # If the first attempt fails, try discovering tests by filename pattern
        python -m pytest $(find . -name "test_*.py" -type f) --cov=api --cov-report=xml --cov-report=term --cov-fail-under=90

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests
        fail_ci_if_error: false

    - name: Display Codecov link
      run: |
        BRANCH_NAME="${GITHUB_REF#refs/heads/}"
        REPO_NAME="${{ github.repository }}"
        echo "Code Coverage Report: https://codecov.io/gh/${REPO_NAME}/branch/${BRANCH_NAME}"

  sonarcloud:
    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    needs: test-and-lint
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for better relevancy
      
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v1.1.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: https://sonarcloud.io
        with:
          args: >
            -Dsonar.projectKey=Pemuda-Pembuka-Langkah_pockeat-api
            -Dsonar.organization=Pemuda-Pembuka-Langkah
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.sources=api
            -Dsonar.tests=tests

      - name: SonarQube Quality Gate check
        uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} 